2342. Max Sum of a Pair With Equal Sum of Digits
Solved
Medium
Topics
Companies
Hint
You are given a 0-indexed array nums consisting of positive integers. You can choose two indices i and j, such that i != j, and the sum of digits of the number nums[i] is equal to that of nums[j].

Return the maximum value of nums[i] + nums[j] that you can obtain over all possible indices i and j that satisfy the conditions.

 

Example 1:

Input: nums = [18,43,36,13,7]
Output: 54
Explanation: The pairs (i, j) that satisfy the conditions are:
- (0, 2), both numbers have a sum of digits equal to 9, and their sum is 18 + 36 = 54.
- (1, 4), both numbers have a sum of digits equal to 7, and their sum is 43 + 7 = 50.
So the maximum sum that we can obtain is 54.
Example 2:

Input: nums = [10,12,19,14]
Output: -1
Explanation: There are no two numbers that satisfy the conditions, so we return -1.
 

Constraints:

1 <= nums.length <= 105
1 <= nums[i] <= 109


Solution 1:

class Solution:
    def maximumSum(self, nums: List[int]) -> int:
        digit_sum_max_val = {}  # Dictionary to store max value for each digit sum
        max_sum_pair = -1       # Initialize maximum sum to -1

        for num in nums:
            digit_sum = 0
            temp_num = num
            while temp_num:
                digit_sum += temp_num % 10
                temp_num //= 10

            if digit_sum in digit_sum_max_val:
                # Found another number with the same digit sum
                current_sum = num + digit_sum_max_val[digit_sum]
                max_sum_pair = max(max_sum_pair, current_sum)
                # Update the maximum value for this digit_sum if the current number is larger
                digit_sum_max_val[digit_sum] = max(digit_sum_max_val[digit_sum], num)
            else:
                # First number encountered with this digit sum
                digit_sum_max_val[digit_sum] = num

        return max_sum_pair