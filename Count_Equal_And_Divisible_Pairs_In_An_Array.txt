2176. Count Equal and Divisible Pairs in an Array
Solved
Easy
Topics
Companies
Hint
Given a 0-indexed integer array nums of length n and an integer k, return the number of pairs (i, j) where 0 <= i < j < n, such that nums[i] == nums[j] and (i * j) is divisible by k.
 

Example 1:

Input: nums = [3,1,2,2,2,1,3], k = 2
Output: 4
Explanation:
There are 4 pairs that meet all the requirements:
- nums[0] == nums[6], and 0 * 6 == 0, which is divisible by 2.
- nums[2] == nums[3], and 2 * 3 == 6, which is divisible by 2.
- nums[2] == nums[4], and 2 * 4 == 8, which is divisible by 2.
- nums[3] == nums[4], and 3 * 4 == 12, which is divisible by 2.
Example 2:

Input: nums = [1,2,3,4], k = 1
Output: 0
Explanation: Since no value in nums is repeated, there are no pairs (i,j) that meet all the requirements.
 

Constraints:

1 <= nums.length <= 100
1 <= nums[i], k <= 100


Solution 1:

class Solution:
    def countPairs(self, nums: List[int], k: int) -> int:
        n = len(nums)
        idx_map = defaultdict(list)
        result = 0

        for i in range(n):
            if nums[i] in idx_map:
                for j in idx_map[nums[i]]:
                    if i * j % k == 0:
                        result += 1
            idx_map[nums[i]].append(i)

        return result


Solution 2:

class Solution:
    def countPairs(self, nums: List[int], k: int) -> int:
        n = len(nums)
        idx_map = defaultdict(list)

        for i in range(n):
            idx_map[nums[i]].append(i)

        divisors = []

        for i in range(1, int(k**0.5) + 1):
            if k % i == 0:
                divisors.append(i)
                if k // i != i:
                    divisors.append(k // i)

        result = 0
        for num, indices in idx_map.items():
            gcd_map = defaultdict(int)
            for i in indices:
                g = gcd(k, i)
                j = k // g
                result += gcd_map[j]
                for d in divisors:
                    if i % d == 0:
                        gcd_map[d] += 1

        return result


Solution 3:

class Solution:
    def countPairs(self, nums: List[int], k: int) -> int:
        n = len(nums)
        idx_map = defaultdict(list)

        for i in range(n):
            idx_map[nums[i]].append(i)

        result = 0
        for indices in idx_map.values():
            gcd_map = defaultdict(int)
            for i in indices:
                g = gcd(k, i)
                for j, cnt in gcd_map.items():
                    result += cnt if (g * j % k) == 0 else 0 
                gcd_map[g] += 1 
        return result
