1749. Maximum Absolute Sum of Any Subarray
Solved
Medium
Topics
Companies
Hint
You are given an integer array nums. The absolute sum of a subarray [numsl, numsl+1, ..., numsr-1, numsr] is abs(numsl + numsl+1 + ... + numsr-1 + numsr).

Return the maximum absolute sum of any (possibly empty) subarray of nums.

Note that abs(x) is defined as follows:

If x is a negative integer, then abs(x) = -x.
If x is a non-negative integer, then abs(x) = x.
 

Example 1:

Input: nums = [1,-3,2,3,-4]
Output: 5
Explanation: The subarray [2,3] has absolute sum = abs(2+3) = abs(5) = 5.
Example 2:

Input: nums = [2,-5,1,-4,3,-2]
Output: 8
Explanation: The subarray [-5,1,-4] has absolute sum = abs(-5+1-4) = abs(-8) = 8.
 

Constraints:

1 <= nums.length <= 105
-104 <= nums[i] <= 104


Solution 1:

class Solution:
    def maxAbsoluteSum(self, nums: List[int]) -> int:
        result = 0
        pos_sum = 0  # maximum subarray sum ending at current index
        neg_sum = 0  # maximum absolute negative subarray sum (i.e. -min subarray sum)

        for num in nums:
            if num > 0:
                # For a positive number, add it to the positive running sum.
                pos_sum += num
                # For the negative running sum, subtract the positive number (reducing the negative magnitude).
                neg_sum -= num
                # If neg_sum goes negative, reset it to 0 (we only care about its absolute magnitude).
                if neg_sum < 0:
                    neg_sum = 0
            else:
                # For a negative number, subtract it from neg_sum.
                # (Since num is negative, neg_sum increases, capturing the magnitude of negative subarray sum.)
                neg_sum -= num  
                # Also add the negative number to pos_sum (which may reduce it).
                pos_sum += num  
                # If pos_sum becomes negative, reset it to 0.
                if pos_sum < 0:
                    pos_sum = 0

            # The maximum absolute sum so far is the maximum of pos_sum and neg_sum.
            result = max(result, pos_sum, neg_sum)

        return result


Solution 2:

class Solution:
    def maxAbsoluteSum(self, nums: List[int]) -> int:
        max_prefix = min_prefix = 0
        prefix_sum = 0

        for num in nums:
            prefix_sum += num
            max_prefix = max(max_prefix, prefix_sum)
            min_prefix = min(min_prefix, prefix_sum)

        return max_prefix - min_prefix