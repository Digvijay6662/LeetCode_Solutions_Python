2579. Count Total Number of Colored Cells
Solved
Medium
Topics
Companies
Hint
There exists an infinitely large two-dimensional grid of uncolored unit cells. You are given a positive integer n, indicating that you must do the following routine for n minutes:

At the first minute, color any arbitrary unit cell blue.
Every minute thereafter, color blue every uncolored cell that touches a blue cell.
Below is a pictorial representation of the state of the grid after minutes 1, 2, and 3.


Return the number of colored cells at the end of n minutes.

 

Example 1:

Input: n = 1
Output: 1
Explanation: After 1 minute, there is only 1 blue cell, so we return 1.
Example 2:

Input: n = 2
Output: 5
Explanation: After 2 minutes, there are 4 colored cells on the boundary and 1 in the center, so we return 5. 
 

Constraints:

1 <= n <= 105


Solution 1:

class Solution:
    def coloredCells(self, n: int) -> int:
        total_cells = 1

        for time in range(1, n):
            total_cells += 4 * time
        
        return total_cells


Solution 2:

class Solution:
    def coloredCells(self, n: int) -> int:
        # Calculate the number of unique cells colored after n steps.
        # For n=1: 1 cell (just the origin).
        # For n=2: 5 cells (origin + 4 adjacent cells).
        # For n=3: 13 cells (5 prior + 8 new cells).
        # For n=4: 25 cells (13 prior + 12 new cells).
        # Pattern: Each step k (from 1 to n-1) adds 4*k new cells around the previous layer:
        #   - Step 1 adds 4*1 = 4 cells.
        #   - Step 2 adds 4*2 = 8 cells.
        #   - Step 3 adds 4*3 = 12 cells, and so on.
        
        # Total cells = 1 (origin) + sum of new cells from steps 1 to n-1.
        # Sum of new cells = 4 * (1 + 2 + ... + (n-1)).
        # Arithmetic sum: sum_{k=1}^{m} k = m * (m + 1) / 2, where m = n - 1.
        # So, sum_{k=1}^{n-1} k = (n - 1) * n / 2.
        
        # Total cells = 1 + 4 * [(n - 1) * n / 2].
        # Simplify: 1 + 2 * (n - 1) * n.
        # This matches the expression 2 * n * (n - 1) + 1, as:
        #   2 * n * (n - 1) + 1 = 2n^2 - 2n + 1, the number of cells after n steps.
        
        # This formula computes the result in O(1) time, avoiding iteration.
        return 2 * n * (n - 1) + 1