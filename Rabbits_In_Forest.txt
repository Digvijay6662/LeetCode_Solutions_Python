781. Rabbits in Forest
Solved
Medium
Topics
Companies
There is a forest with an unknown number of rabbits. We asked n rabbits "How many rabbits have the same color as you?" and collected the answers in an integer array answers where answers[i] is the answer of the ith rabbit.

Given the array answers, return the minimum number of rabbits that could be in the forest.

 

Example 1:

Input: answers = [1,1,2]
Output: 5
Explanation:
The two rabbits that answered "1" could both be the same color, say red.
The rabbit that answered "2" can't be red or the answers would be inconsistent.
Say the rabbit that answered "2" was blue.
Then there should be 2 other blue rabbits in the forest that didn't answer into the array.
The smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn't.
Example 2:

Input: answers = [10,10,10]
Output: 11
 

Constraints:

1 <= answers.length <= 1000
0 <= answers[i] < 1000


Solution 1:

class Solution:
    def numRabbits(self, answers: List[int]) -> int:
        # groups[x] = how many more rabbits with answer x we can still account for
        groups = defaultdict(int)
        total = 0
        
        for x in answers:
            if groups[x] == 0:
                # need to start a new group of size x+1
                total += x + 1
                # we've now accounted for one rabbit, so x slots remain
                groups[x] = x
            else:
                # fill one of the remaining slots
                groups[x] -= 1
        
        return total


Solution 2:

class Solution:
    def numRabbits(self, answers: List[int]) -> int:
        groups = {}
        result = 0
        
        for x in answers:
            if x == 0:
                result += 1  # Each '0' answer requires exactly one rabbit
            else:
                # Check if current x is not in groups or the current group is full
                if x not in groups or groups[x] == 0:
                    result += x + 1  # Start a new group of x+1 rabbits
                    groups[x] = 1  # Initialize the count for the new group
                else:
                    groups[x] += 1  # Add to the current group
                    if groups[x] == x + 1:
                        groups[x] = 0  # Reset if the group is full
        
        return result


Solution 3:

class Solution:
    def numRabbits(self, answers: List[int]) -> int:
        count = Counter(answers)
        result = 0
        
        for x in count:
            result += (count[x] + x) // (x + 1) * (x + 1)
        return result