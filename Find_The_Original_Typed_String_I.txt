3330. Find the Original Typed String I
Solved
Easy
Topics
premium lock icon
Companies
Hint
Alice is attempting to type a specific string on her computer. However, she tends to be clumsy and may press a key for too long, resulting in a character being typed multiple times.

Although Alice tried to focus on her typing, she is aware that she may still have done this at most once.

You are given a string word, which represents the final output displayed on Alice's screen.

Return the total number of possible original strings that Alice might have intended to type.

 

Example 1:

Input: word = "abbcccc"

Output: 5

Explanation:

The possible strings are: "abbcccc", "abbccc", "abbcc", "abbc", and "abcccc".

Example 2:

Input: word = "abcd"

Output: 1

Explanation:

The only possible string is "abcd".

Example 3:

Input: word = "aaaa"

Output: 4

 

Constraints:

1 <= word.length <= 100
word consists only of lowercase English letters.


Solution 1:

class Solution:
    def possibleStringCount(self, word: str) -> int:
        # Determine the length of the input string
        n = len(word)
        
        # At minimum, Alice could have typed exactly what appears,
        # so start with a base count of 1 possible original string
        count = 1
        
        # Examine each character from the second one onward
        for i in range(1, n):
            # If the current character matches the previous,
            # it could be the result of a single long press
            if word[i] == word[i - 1]:
                # Each such match adds one more way the original
                # string could have omitted that extra character
                count += 1
        
        # Return the total number of possible original strings
        return count